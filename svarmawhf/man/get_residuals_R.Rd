% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ba_llfactory.R
\name{get_residuals_R}
\alias{get_residuals_R}
\title{Get Residuals}
\usage{
get_residuals_R(data_in, polm_ar, polm_ma_bwd, polm_ma_fwd, kappa, k)
}
\arguments{
\item{data_in}{matrix. Observed data in wide format, i.e. observations in columns and variables in rows.
This is done for consistency with the Rcpp version \link{get_residuals}}

\item{polm_ar}{matrix. AR polynomial in wide matrix format (not a 3D array). \eqn{( I, a_1, \ldots, a_p )}{(I, a[1], ... , a[p])}
of dimension \eqn{(n \times (p+1) n)}{(n x (p+1)n)}.
It is used in the call to \link{toepl_fwd}.}

\item{polm_ma_bwd}{matrix. MA backward polynomial in wide matrix format (not a 3D array). 
It includes the zero lag coefficient but is in reverse order: \eqn{p_{q-kappa}, \ldots, p_1, p_0}.
The matrix \eqn{p_0} is not necessarily the identity matrix and this needs to be taken into account before discarding it such that 
\link{toepl_inv} can be called.}

\item{polm_ma_fwd}{matrix. MA forward polynomial in wide matrix format (not a 3D array). Zero lag coefficient is \strong{not} included.
Note that for usual MA matrix polynomials the order of the coefficients would need to be inverted to call \link{toepl_inv}.
However, because of the forward nature of these calculations, the matrices are in the order 
\eqn{( f_1, \ldots, f_{kappa} )}{(f[1], ... , f[kappa])} and of dimension \eqn{(n \times kappa n)}{(n x kappa n)}.}

\item{kappa, k}{partial index}
}
\value{
Residuals in wide format (every row corresponds to a variable, every column to an observation)
}
\description{
Calculates the residuals by using \link{toepl_inv} (MA calculations) and \link{toepl_fwd} (AR calculations).
The inputs and the way this function is written mimics the Rcpp function which is actually used in the calculations because of speed.
In particular, the AR, MA bwd, MA fwd polynomial matrices are not in the usual 3D array format. 
Moreover, they differ in whether the zero-lag coefficient matrix is included and in which direction they are ordered (this is due to computational reasons).
}
