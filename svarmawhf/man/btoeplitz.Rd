% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zz_ratmat_tools.R
\name{btoeplitz}
\alias{btoeplitz}
\title{Block Toeplitz matrix}
\usage{
btoeplitz(R, C)
}
\arguments{
\item{R}{Array with dimensions \eqn{(p,q,n)}.
Corresponds to the first (block-) row, containing \eqn{n} matrices of dimension \eqn{(p \times q)}{(p x q)}.
A vector is coerced to an \eqn{(1,1,n)} dimensional array and a \eqn{(p,q)} matrix is interpreted as
an \eqn{(p,q,1)} dimensional array.}

\item{C}{Array with dimensions \eqn{(p,q,m)}.
Corresponds to the first (block-) column, containing \eqn{m} matrices of dimension \eqn{(p \times q)}{(p x q)}.
A vector is coerced to an \eqn{(1,1,m)} dimensional array and a \eqn{(p,q)} matrix is interpreted as
an \eqn{(p,q,1)} dimensional array.}
}
\value{
Matrix of size \eqn{( pm \times qn )}{( pm x qn )}.
}
\description{
This function was originally part of the R-package \strong{rationalmatrices}.
\cr
Construct a block Toeplitz matrix from two 3-dimensional arrays \code{R} and \code{C}. The array
\code{R} determines the first block row and \code{C} the first block column of the result.
The \eqn{(i,j)}-th block of the Toeplitz matrix is \code{R[,,j-i+1]} for \eqn{j\geq i}{j \ge i}
and \code{C[,,i-j+1]} for \eqn{j < i}. In particular, note that the \eqn{(1,1)} block
is set to \code{R[,,1]} (while \code{C[,,1]} is ignored).
}
\details{
If only the argument \code{R} is provided then \code{C} is set to \code{C = aperm(R,c(2,1,3)))}. So
\code{btoeplitz(R = X)} is equivalent to \code{btoeplitz(R = X, C = aperm(X,c(2,1,3)))}. Analogously
\code{btoeplitz(C = X)} is equivalent to \code{btoeplitz(R = aperm(X,c(2,1,3)), C = X)}.
In these cases \eqn{p=q} must hold. The so constructed Toeplitz matrix is
symmetric if and only if \code{X[,,1]} is symmetric. Note also that even in the case where only \code{C}
is supplied the "\code{R} wins" rule holds, i.e. \code{btoeplitz(C = X)} sets the \eqn{(1,1)} block
equal to \code{t(X[,,1])}.
}
\examples{
btoeplitz(0:3)
btoeplitz(0:3,-(0:3))

btoeplitz(R = test_array(dim=c(2,3,3)), C = -test_array(dim = c(2,3,2)))
btoeplitz(R = test_array(dim=c(2,2,1)), C = test_array(dim=c(2,2,0)))
btoeplitz(R = test_array(dim=c(2,2,3)))
btoeplitz(C = -test_array(dim=c(2,2,3)))
# create a symmetric matrix
X = test_array(dim= c(2,2,3))
X[,,1] = (X[,,1] + t(X[,,1]))/2
btoeplitz(R = X)
btoeplitz(C = X)

\dontrun{
# the following examples throw an error
btoeplitz(R = test_array(dim=c(2,1,3)), C = -test_array(dim = c(2,2,2)))
btoeplitz(R = test_array(dim=c(2,1,3)))
btoeplitz(C = test_array(dim=c(2,1,3)))
}
}
