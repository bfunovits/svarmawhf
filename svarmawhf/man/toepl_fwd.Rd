% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zz_rldm_solve_methods.R
\name{toepl_fwd}
\alias{toepl_fwd}
\alias{toepl_inv}
\alias{toeplitz_calculations}
\title{Toeplitz Calculations}
\usage{
toepl_fwd(polm_wide, data_in, t0 = 1)

toepl_inv(polm_rev, data_in, t0 = 1)
}
\arguments{
\item{polm_wide}{Wide matrix \eqn{( d_0, d_1, \ldots, d_q )}{(d[0], d[1], ... , d[q])}
of dimension \eqn{(m \times (q+1) n)}{(m x (q+1)n)} which represents a
matrix polynomial \eqn{d(z)} of degree \eqn{q}.}

\item{data_in}{Data matrix of dimension \eqn{(dim(inputs) x nobs)}.
Every column corresponds to one observation.}

\item{t0}{Integer. Time index where calculations should start.
Default set to 1. For AR calculations, \eqn{degree + 1} would be another smart option.}

\item{polm_rev}{Wide matrix \eqn{(c_p, ... , c_1)}{(c[p], ... , c[1])} of dimension \eqn{(n \times (q+1) n)}{(n x p n)}
with coefficients ordered in reverse direction, and
zero-lag coefficient matrix not included.
It represents a square polynomial matrix \eqn{c(z)} with \eqn{c_0}{c[0]} equal to the identity matrix and of degree \eqn{p}.}
}
\value{
data_out Data matrix of dimension \eqn{(dim_out x n_obs)}
}
\description{
This function was originally part of the R-package \strong{RLDM}.
\cr
Multiplication of stacked data vector with a block Toeplitz matrix (\code{toepl_fwd()} for MA calculations) or
"inversion" of a block Toeplitz matrix in order to perform calculations equivalent to
multiplying a given stacked data vector with the inverse of a lower-triangular banded block Toeplitz matrix (\code{toepl_inv()} for AR calculations).
Note that matrix polynomials can be mapped one-to-one to banded lower-triangular block Toeplitz matrices.
}
\section{MA-type Toeplitz calculations}{

Given a polynomial matrix of degree \eqn{q} and dimension \eqn{(m \times n)}{(m x n)}, where \eqn{m \geq n}{m \ge n},
and given a "wide" input data matrix of dimension \eqn{(n \times nobs)}{(n x nobs)}, where \eqn{nobs} is the number of observations
such that each column corresponds to one observation and the number of columns is equal to the number of observations,
we calculate a "wide" output data matrix of dimension \eqn{(m \times nobs)}.

The function name \code{toepl_fwd} stems from the multiplication of the "stacked" input data vector
\eqn{(u_1', \ldots , u_{nobs}')'}{(u[1]', ... , u[nobs]')'} with a banded lower-triangular block Toeplitz matrix \eqn{T}
of dimension \eqn{(nobs m \times nobs n)}{(nobs m x nobs n)}
whose block elements depend only on the difference between the row- and column-index
such that  \eqn{T_{i,j} = d_{i-j}}{T[i,j]=d[i-j]}.
}

\section{AR-type Toeplitz calcuations}{

Given a square polynomial matrix \eqn{c(z)} for which \eqn{c_0}{c[0]} is the identity matrix and given
a wide data matrix \code{y = data_in}, obtain the solution \code{u}, a wide data matrix, of the Toeplitz equation
\deqn{T (y_1', \ldots , y_{nobs}')' =  (u_1', ... , u_{nobs}')'}{
      T (y[1]', \ldots , u[nobs]')' =  (u[1]', ... , u[nobs]')'}

Note that the zero-lag coefficient is discarded and the coefficients are in reversed order
since this simplifies computations and implementation.
}

\examples{
p = test_polm(dim = c(2,2), degree = 2) \%>\% unclass()
dim(p) = c(2,2*3)
data = matrix(rnorm(2*100), 2, 100)
toepl_fwd(p, data)
p = test_polm(dim = c(2,2), degree = 2) \%>\% unclass()
dim(p) = c(2,2*3)
data = matrix(rnorm(2*100), 2, 100)
toepl_inv(p, data)
}
