% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/zz_rldm_solve_methods.R
\name{solve_ARMA}
\alias{solve_ARMA}
\alias{solve_ARMA_cpp}
\alias{solve_ARMA_R}
\title{Rcpp version of solve_ARMA}
\usage{
solve_ARMA_cpp(a, b, u, y, t0)

solve_ARMA_R(a, b, u, y, t0)
}
\arguments{
\item{a, b}{Parameter matrices. Check R version for details.}

\item{b}{\eqn{(m, n(q+1))} matrix \eqn{(b_0,...,b_q}{(b[0],...,b[q])}.}

\item{u, y}{Data. y is overwritten, u is const reference.}

\item{y}{\eqn{(m, N)} matrix with the outputs \eqn{(y_1,...,y_N}{(y[1],...,y[N])}.}

\item{t0}{integer, start iteration at t=t0.}

\item{a}{\eqn{(m, mp)} matrix \eqn{(a_p,...,a_1)}{(a[p],...,a[1])}.}

\item{u}{\eqn{(n, N)} matrix with the inputs \eqn{(u_1,...,u_N}{(u[1],...,u[N])}.}
}
\value{
void

The R implementation \code{solve_ARMA_R} returns the matrix \code{y} with the computed outputs.
        The RcppArmadillo implementation returns \code{NULL} but \bold{overwrites} the input argument \code{y}!
}
\description{
This function was originally part of the R-package \strong{RLDM}.
\cr
Compute the outputs of ARMA(p, q) systems of the form
\deqn{y_t = a_1 y_{t-1} + ... + a_p y_{[t-p} + b_0 u_t + \cdots + b_q u_{t-q}}{
      y[t] = a[1] y[t-1] + ... + a[p] y[t-p] + b[0] u[t] + ... + b[q] u[t-q]}
}
\details{
Values \eqn{y_t}{y[n]}, \eqn{u_t}{u[t]} for \eqn{t\leq 0}{t\le 0} are implicitely set to be zero.
However, if we start the iteration with some \eqn{t_0>1}{t0>1} we can enforce non-zero
initial values.

The routines are used internally and hence do \bold{not} check their arguments.
We require \eqn{m > 0}, \eqn{p \geq 0}{p \ge 0}, \eqn{n \geq 0}{n \ge 0}, \eqn{(q+1) \geq 0}{(q+1) \ge 0}
and \eqn{1 \leq t_0 \leq N}{1 \le t0 \le N}.
Note also that the RcppArmadillo implementation \bold{overwrites} the input argument \code{y}.
Use this procedure with care!

Note the non standard arguments: The order of the AR coefficients is reversed. The data matrices
are organized columnwise (to avoid memory shuffling)!
}
\keyword{internal}
